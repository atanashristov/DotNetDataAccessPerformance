<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="DotNetDataAccessPerformance"
                   namespace="DotNetDataAccessPerformance.Domain">

  <class name="Artist">
    <id name="ArtistId">
      <generator class="native"/>
    </id>
    <property name="Name" column="Name"/>
    <set name="Albums">
      <key column="AlbumId"/>
      <one-to-many class="Album"/>
    </set>
  </class>

  <class name="Album">
    <id name="AlbumId">
      <generator class="native"/>
    </id>
    <property name="Title" column="Title"/>
    <property name="ArtistId" column="ArtistId"/>
    <many-to-one name="Artist" column="ArtistId" cascade="all"/>
    <set name="Tracks">
      <key column="TrackId"/>
      <one-to-many class="Track"/>
    </set>
  </class>

  <class name="Track">
    <id name="TrackId">
      <generator class="native"/>
    </id>
    <property name="AlbumId" column="AlbumId"/>
    <property name="Bytes" column="Bytes"/>
    <property name="Composer" column="Composer"/>
    <property name="GenreId" column="GenreId"/>
    <property name="MediaTypeId" column="MediaTypeId"/>
    <property name="Milliseconds" column="Milliseconds"/>
    <property name="Name" column="Name"/>
    <property name="UnitPrice" column="UnitPrice"/>
    <many-to-one name="Album" column="AlbumId" cascade="all"/>
  </class>

  <resultset name="Song">
    <return-scalar column="SongName" type="string"/>
    <return-scalar column="AlbumName" type="string"/>
    <return-scalar column="ArtistName" type="string"/>
  </resultset>
  <sql-query name="spGetSongsByArtist" resultset-ref="Song">
    exec dbo.spGetSongsByArtist :name
  </sql-query>

  <sql-query name="spGetArtistById">
    <return alias="artist" class="Artist">
      <return-property name="ArtistId" column="ArtistId"/>
      <return-property name="Name" column="Name"/>
    </return>
    exec dbo.spGetArtistById :id
  </sql-query>

</hibernate-mapping>